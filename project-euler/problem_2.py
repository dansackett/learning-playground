#!/usr/bin/python

# Even Fibonacci numbers
# Problem 2
# Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with 1 and 2, the first 10 terms will be:

# 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...

# By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the even-valued terms.

def main(limit = 4000000):
    current = 1
    fib = []

    while current < limit:
        if len(fib) == 0:
            pass
        elif len(fib) == 1:
            current = fib[0] + fib[0]
        else:
            current = fib[-1] + fib[-2]

        fib.append(current)

    print sum([x for x in fib if x % 2 == 0])


if __name__ == '__main__':
    main()
